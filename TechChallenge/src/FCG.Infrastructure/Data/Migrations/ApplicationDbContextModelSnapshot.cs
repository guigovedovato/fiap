// <auto-generated />
using System;
using FCG.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCG.Infrastructure.Data.Migrations;

[DbContext(typeof(ApplicationDbContext))]
partial class ApplicationDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.15")
            .HasAnnotation("Proxies:ChangeTracking", false)
            .HasAnnotation("Proxies:CheckEquality", false)
            .HasAnnotation("Proxies:LazyLoading", true);

        modelBuilder.Entity("FCG.Domain.Game.GameModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("TEXT");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("TEXT");

                b.Property<int>("Genre")
                    .HasColumnType("INTEGER");

                b.Property<string>("ImageUrl")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("TEXT");

                b.Property<bool>("IsActive")
                    .HasColumnType("INTEGER");

                b.Property<bool>("IsDemo")
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("Publisher")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<DateTime>("ReleaseDate")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Games", (string)null);
            });

        modelBuilder.Entity("FCG.Domain.Login.LoginModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("TEXT");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("Email")
                    .IsUnique();

                b.ToTable("Logins", (string)null);

                b.HasData(
                    new
                    {
                        Id = new Guid("e402588b-c931-437d-83ac-941010840391"),
                        CreatedAt = new DateTime(2025, 5, 31, 10, 3, 50, 110, DateTimeKind.Utc).AddTicks(9688),
                        Email = "admin@email.com",
                        Password = "AQAAAAIAAYagAAAAEFvxevg2Oz/DiArPRXiGGbDy29yxw2ZrroJzNh68WHeARuCaupa6cqkHRj2x0B2S8A==",
                        UpdatedAt = new DateTime(2025, 5, 31, 10, 3, 50, 110, DateTimeKind.Utc).AddTicks(9691)
                    });
            });

        modelBuilder.Entity("FCG.Domain.User.UserModel", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("TEXT");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("TEXT");

                b.Property<bool>("IsActive")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER")
                    .HasDefaultValue(true);

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("TEXT");

                b.Property<Guid>("LoginId")
                    .HasColumnType("TEXT");

                b.Property<string>("Role")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("LoginId")
                    .IsUnique();

                b.ToTable("Users", (string)null);

                b.HasData(
                    new
                    {
                        Id = new Guid("bb96f61c-72c9-410c-8b3e-8b1b636a718f"),
                        CreatedAt = new DateTime(2025, 5, 31, 10, 3, 50, 111, DateTimeKind.Utc).AddTicks(4371),
                        FirstName = "Admin",
                        IsActive = true,
                        LastName = "User",
                        LoginId = new Guid("e402588b-c931-437d-83ac-941010840391"),
                        Role = "Admin",
                        UpdatedAt = new DateTime(2025, 5, 31, 10, 3, 50, 111, DateTimeKind.Utc).AddTicks(4373)
                    });
            });

        modelBuilder.Entity("FCG.Domain.User.UserModel", b =>
            {
                b.HasOne("FCG.Domain.Login.LoginModel", "Login")
                    .WithOne("User")
                    .HasForeignKey("FCG.Domain.User.UserModel", "LoginId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Login");
            });

        modelBuilder.Entity("FCG.Domain.Login.LoginModel", b =>
            {
                b.Navigation("User")
                    .IsRequired();
            });
#pragma warning restore 612, 618
    }
}
